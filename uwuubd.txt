CREATE DATABASE uwu;
USE uwu;

CREATE TABLE usuarios(
    usr_id INT(11) AUTO_INCREMENT PRIMARY KEY,
    usr_correo VARCHAR(255) NOT NULL UNIQUE,
    usr_nombre VARCHAR(255) NOT NULL,
    usr_pwd CHAR(30) NOT NULL,
    usr_currency INTEGER NOT NULL,
    usr_fecha_creacion DATETIME NOT NULL,
    ses_id_creador INTEGER NOT NULL
);

CREATE TABLE sesiones(
    ses_id INTEGER AUTO_INCREMENT PRIMARY KEY,
    ses_ip VARCHAR(15) NOT NULL,
    ses_inicio DATETIME NOT NULL,
    ses_fin DATETIME NULL,
    ses_ult_act DATETIME NOT NULL,
    usr_id INT(11) NOT NULL
);

CREATE TABLE roles(
    rol_id INTEGER AUTO_INCREMENT PRIMARY KEY,
	rol_nombre VARCHAR(255) NOT NULL,
    ses_id_creador INTEGER NOT NULL
);

CREATE TABLE roles_usuario(
    ru_tiempo DATETIME NOT NULL,
    usr_id INT(11) NOT NULL,
    rol_id INTEGER NOT NULL,
    ses_id_creador INTEGER NOT NULL
);

CREATE TABLE permisos(
    perm_id INTEGER AUTO_INCREMENT PRIMARY KEY,
    perm_permiso CHAR(7) NOT NULL,
    perm_tiempo DATETIME NOT NULL,
    ses_id_creador INTEGER NOT NULL,
    rol_id INTEGER NOT NULL
);

CREATE TABLE inventario_uni(
    inv_un_ud INTEGER AUTO_INCREMENT PRIMARY KEY,
    inv_un_obtencion DATETIME NOT NULL,
    inv_un_nivel TINYINT NOT NULL,
    inv_un_exp TINYINT NOT NULL,
    inv_un_atk SMALLINT NOT NULL,
    ses_id_creador INTEGER NOT NULL,
    un_id INTEGER NOT NULL
);

CREATE TABLE unidades(
    un_id INTEGER AUTO_INCREMENT PRIMARY KEY,
    un_nombre VARCHAR(30) NOT NULL,
    un_hp INTEGER NOT NULL,
    un_rareza VARCHAR(3) NOT NULL,
    un_atkinc TINYINT NOT NULL,
    un_img VARCHAR(255) NOT NULL,
    un_sprite VARCHAR(255) NOT NULL,
    un_icono VARCHAR(255) NOT NULL,
    ses_id INTEGER NOT NULL
);

CREATE TABLE log(
    inv_un_id INTEGER NOT NULL, 
    ses_id INTEGER NOT NULL,
    id_mision INTEGER NOT NULL,
    log_fecha DATETIME	
);

CREATE TABLE misiones(
    mis_id INTEGER AUTO_INCREMENT PRIMARY KEY,
    mis_nombre VARCHAR(255) NOT NULL,
    ses_id INTEGER NOT NULL
);

CREATE TABLE misiones_enemigos(
    ses_id INTEGER NOT NULL,
    ene_id INTEGER NOT NULL,
    mis_id INTEGER NOT NULL
);

CREATE TABLE enemigos(
    ene_id INTEGER AUTO_INCREMENT PRIMARY KEY,
    ene_nombre VARCHAR(255) NOT NULL,
    ene_atk INTEGER NOT NULL,
    ene_hp INTEGER NOT NULL,
    ene_sprite VARCHAR(255),
    ses_id INTEGER NOT NULL
);


-- CONSTRAINTS:

ALTER TABLE usuarios
ADD CONSTRAINT ses2usr 
FOREIGN KEY (ses_id) REFERENCES sesiones(ses_id);

ALTER TABLE roles_usuario
ADD CONSTRAINT usr2rolusu
FOREIGN KEY (usr_id) REFERENCES usuarios(usr_id);

ALTER TABLE roles_usuario
ADD CONSTRAINT rol2rolusu
FOREIGN KEY (rol_id) REFERENCES roles(rol_id);

ALTER TABLE roles_usuario
ADD CONSTRAINT ses2rolusu
FOREIGN KEY (ses_id) REFERENCES sesiones(ses_id);

ALTER TABLE roles
ADD CONSTRAINT ses2rol
FOREIGN KEY (ses_id) REFERENCES sesiones (ses_id);

ALTER TABLE sesiones
ADD CONSTRAINT usu2ses
FOREIGN KEY (usr_id) REFERENCES
usuarios(usr_id);

ALTER TABLE permisos
ADD CONSTRAINT ses2perm
FOREIGN KEY (ses_id) REFERENCES sesiones (ses_id);

ALTER TABLE permisos
ADD CONSTRAINT rol2perm
FOREIGN KEY (rol_id) REFERENCES
roles (rol_id);

ALTER TABLE inventario_uni
ADD CONSTRAINT ses2invuni
FOREIGN KEY (ses_id) REFERENCES sesiones (ses_id);

ALTER TABLE inventario_uni
ADD CONSTRAINT unid2inveuni
FOREIGN KEY (un_id) REFERENCES unidades (un_id);

ALTER TABLE unidades
ADD CONSTRAINT ses2uni
FOREIGN KEY (ses_id) REFERENCES sesiones (ses_id);

ALTER TABLE log
ADD CONSTRAINT invuni2log
FOREIGN KEY (inv_un_id) REFERENCES inventario_uni (inv_un_ud);

ALTER TABLE log
ADD CONSTRAINT ses2log
FOREIGN KEY (ses_id) REFERENCES sesiones (ses_id);

ALTER TABLE log
ADD CONSTRAINT mis2log
FOREIGN KEY (id_mision) REFERENCES misiones (mis_id);

ALTER TABLE misiones
ADD CONSTRAINT ses2mis
FOREIGN KEY (ses_id) REFERENCES sesiones (ses_id);

ALTER TABLE misiones_enemigos
ADD CONSTRAINT ses2misen
FOREIGN KEY (ses_id) REFERENCES sesiones(ses_id);

ALTER TABLE misiones_enemigos
ADD CONSTRAINT ene2misene
FOREIGN KEY (ene_id) REFERENCES enemigos(ene_id);

ALTER TABLE misiones_enemigos
ADD CONSTRAINT mis2misene
FOREIGN KEY (mis_id) REFERENCES misiones(mis_id);

ALTER TABLE enemigos
ADD CONSTRAINT ses2ene
FOREIGN KEY (ses_id) REFERENCES sesiones (ses_id);

-- Inserciones

insert into usuarios(usr_correo, usr_nombre, usr_pwd, usr_currency, usr_fecha_creacion, ses_id_creador)
values ('therestless@gmail.com', 'DonMau', md5('contrase√±adelmau123'), '10', now(), 1);

-- Procedimientos y Funciones

set global log_bin_trust_function_creators = 1;

delimiter ;;

create procedure IniSes(id integer)
begin
update sesiones set ses_inicio = now() where (id = ses_id);
end;

create procedure doAction(id integer)
begin
update sesiones set ses_ult_act = now() where (sesiones.usr_id = id);
end;

create function LogIn(correo varchar(255), pass varchar(255), IP varchar(16))
returns bool
begin
if (correo in (usr_correo)) then 
	if (pass = (select usr_pass from usuarios where (correo = usr_correo))) then 
		set @conf = true;
        if (IP not in (select ses_ip from sesiones where (sesiones.usr_id = (select usr_id from usuarios where (usr_correo = correo))))) then
			select usr_id into @id from sesiones where (usr_correo = correo);
            insert into sesiones(ses_ip, ses_inicio, ses_fin, ses_ult_act, usr_id) values
            (IP, now(), null, now(), @id);
		else
			select ses_id from sesiones where();
			IniciSes(@Sid);
            doAction(@Sid);
		end if;
    else 
		set @conf = false; 
    end if;
else 
	set @conf = false;
end if;
return @conf;
end;;