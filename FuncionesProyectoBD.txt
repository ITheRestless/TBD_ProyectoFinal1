FUNCIONES Y MÉTODOS DE INVOCAR
DELIMITER $
CREATE FUNCTION invocar(ses_id INT)
RETURNS INT
BEGIN
	CALL utilizarFondos(ses_id);
	SELECT COUNT(*) INTO @tam FROM unidades;
    	SELECT FLOOR(1 + RAND()*(@tam - 1)) INTO @dato;
    	SELECT un_atkinc INTO @atk FROM unidades WHERE (un_id = @dato);
    	INSERT INTO inventario_uni (inv_un_obtencion, inv_un_nivel, inv_un_exp, inv_un_atk, ses_id, un_id) VALUES (NOW(), 1, 0, @atk, ses_id, @dato);
    	RETURN @dato;
END$
_________________________________________________________
DELIMITER $
CREATE FUNCTION mostrarInvocacion(ses_id INT)
RETURNS VARCHAR(255)
BEGIN
	SET @dato = invocar(ses_id);
    SET @dirImg = (SELECT un_img FROM unidades WHERE un_img = @dato);
    RETURN @dirImg;
END $
DELIMITER ;
________________________________________________________
Habilita el botón de invocar
CREATE FUNCTION verificarFondos(id INT)
RETURNS BOOLEAN
BEGIN
	SELECT usuarios.usr_currency INTO @fondos FROM usuarios WHERE (ses_id = id);
	IF(@fondos > 5) THEN
    	return TRUE;
    ELSE
    	return FALSE;
    END IF;
END
____________________________________________________________________________________
DELIMITER $
CREATE PROCEDURE utilizarFondos (IN ses_id INT)
BEGIN
	UPDATE usuarios
    SET usuarios.usr_currency = usr_currency - 5;
END$
DELIMITER ;
____________________________________________________________________________________



FUNCIONES Y MÉTODOS DEL INVENTARIO!!!!
DELIMITER $
CREATE PROCEDURE inventarioGenerico (IN ses_id INT)
BEGIN
	SELECT un.un_img FROM unidades AS un INNER JOIN inventario_uni AS iu ON(un.un_id = iu.un_id)
    WHERE inventario_uni.ses_id = ses_id;
END $$
DELIMITER ;

/ LA OTRA FORMA QUE A LO MEJOR SÍ JALA/
SELECT un_img FROM unidades WHERE unidades.un_id IN (SELECT un_id FROM inventario_uni WHERE inventario_uni.ses_id = ses_id);
SELECT un_id,  FROM inventario_uni WHERE inventario_uni.ses_id = ses_id;
